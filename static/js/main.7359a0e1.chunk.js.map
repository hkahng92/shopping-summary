{"version":3,"sources":["components/Subtotal/Subtotal.js","components/PickupSavings/PickupSavings.js","components/TaxesFees/TaxesFees.js","components/EstimatedTotal/EstimatedTotal.js","components/ItemDetails/ItemDetails.js","components/PromoCode/PromoCode.js","App.js","serviceWorker.js","index.js"],"names":["SubTotal","state","react_default","a","createElement","Row","className","Col","md","concat","this","props","price","Component","styles","pickupSavings","textDecoration","totalSavings","color","fontWeight","PickupSavings","tooltip","Tooltip","id","OverlayTrigger","placement","overlay","style","TaxesFees","taxes","EstimatedTotal","ItemDetails","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","_this2","Button","bsStyle","onClick","setState","Collapse","in","Card","CardImg","width","height","src","alt","CardBody","PromoCodeDiscount","value","es_Row","es_Col","Form","FormGroup","controlId","Label","Input","type","placeholder","promoCode","onChange","handleChange","block","disabled","isDisabled","giveDiscount","App","componentDidMount","total","estimatedTotal","disablePromoButton","Container","Subtotal","toFixed","components_PickupSavings_PickupSavings","components_TaxesFees_TaxesFees","components_EstimatedTotal_EstimatedTotal","components_ItemDetails_ItemDetails","PromoCode","giveDiscountHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7359a0e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nclass SubTotal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Row className=\"show-grid\">\r\n        <Col md={6}>Subtotal</Col>\r\n        <Col md={6}>{`$${this.props.price}`}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubTotal;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nlet styles = {\r\n  pickupSavings: {\r\n    textDecoration: \"underline\"\r\n  },\r\n  totalSavings: {\r\n    color: \"red\",\r\n    fontWeight: 800\r\n  }\r\n};\r\n\r\nclass PickupSavings extends Component {\r\n  state = {};\r\n  render() {\r\n    const tooltip = (\r\n      <Tooltip id=\"tooltip\">\r\n        <p>\r\n          Picking up your order in the store helps cut costs, and we pass the\r\n          savings on to you.\r\n        </p>\r\n      </Tooltip>\r\n    );\r\n\r\n    return (\r\n      <Row className=\"show-grid\">\r\n        <Col md={6}>\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n            <div style={styles.pickupSavings}>Pickup Savings</div>\r\n          </OverlayTrigger>\r\n        </Col>\r\n\r\n        <Col style={styles.totalSavings} md={6}>\r\n          {`$${this.props.price}`}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PickupSavings;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nclass TaxesFees extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Row className=\"show-grid\">\r\n        <Col md={6}>Est.taxes & fees (NJ Sales Tax Rate)</Col>\r\n        <Col md={6}>{`$${this.props.taxes}`}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaxesFees;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nclass EstimatedTotal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col md={6}>\r\n          <h2>Est. Total</h2>\r\n        </Col>\r\n        <Col md={6}>{`$${this.props.price}`}</Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EstimatedTotal;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Collapse, Row, Col } from \"react-bootstrap\";\r\nimport { Card, CardImg, CardBody } from \"reactstrap\";\r\n\r\nclass ItemDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"item-details-buton\"\r\n          bsStyle=\"link\"\r\n          onClick={() => this.setState({ open: !this.state.open })}\r\n        >\r\n          {this.state.open === false ? `See` : `Hide`} item details\r\n          {this.state.open === false ? ` +` : ` -`}\r\n        </Button>\r\n\r\n        <Collapse in={this.state.open}>\r\n          <div>\r\n            <Card>\r\n              <CardImg\r\n                width=\"50%\"\r\n                height=\"50%\"\r\n                src=\"https://images-na.ssl-images-amazon.com/images/I/51P05w2sl4L._SL1000_.jpg\"\r\n                alt=\"thumb\"\r\n              />\r\n              <CardBody>\r\n                <p>\r\n                  Devialet Gold Phantom - High-end wireless speaker - 4500 Watts\r\n                  - 108 dB\r\n                </p>\r\n                <Row className=\"show-grid\">\r\n                  <Col md={6}>\r\n                    <strong>{`$${this.props.price}`}</strong>\r\n                    <br />\r\n                    <strong className=\"price-strike\">{`$${\r\n                      this.props.price\r\n                    }`}</strong>\r\n                  </Col>\r\n                  <Col md={6}>Qty: 1</Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemDetails;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Collapse } from \"react-bootstrap\";\r\nimport { Card, Form, Row, Col, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nclass PromoCodeDiscount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n      value: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"promo-code-button\"\r\n          bsStyle=\"link\"\r\n          onClick={() => this.setState({ open: !this.state.open })}\r\n        >\r\n          {this.state.open === false ? `Apply` : `Hide`} promo code\r\n          {this.state.open === false ? ` +` : ` -`}\r\n        </Button>\r\n\r\n        <Collapse in={this.state.open}>\r\n          <Card>\r\n            <Row className=\"show-grid\">\r\n              <Col md={12}>\r\n                <Form>\r\n                  <FormGroup controlId=\"formInlineName\">\r\n                    <Label>Promo Code</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter promo code\"\r\n                      value={this.props.promoCode}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                  <Button\r\n                    block\r\n                    bsStyle=\"success\"\r\n                    className=\"btn-round\"\r\n                    disabled={this.props.isDisabled}\r\n                    onClick={this.props.giveDiscount}\r\n                  >\r\n                    Apply\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromoCodeDiscount;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container } from \"react-bootstrap\";\nimport Subtotal from \"./components/Subtotal/Subtotal\";\nimport PickupSavings from \"./components/PickupSavings/PickupSavings\";\nimport TaxesFees from \"./components/TaxesFees/TaxesFees\";\nimport EstimatedTotal from \"./components/EstimatedTotal/EstimatedTotal\";\nimport ItemDetails from \"./components/ItemDetails/ItemDetails\";\nimport PromoCodeDiscount from \"./components/PromoCode/PromoCode\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      total: 100,\n      pickupSavings: -3.85,\n      taxes: 0,\n      estimatedTotal: 0,\n      disablePromoButton: false\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState(\n      {\n        taxes: (this.state.total + this.state.pickupSavings) * 0.06625\n      },\n      function() {\n        this.setState({\n          estimatedTotal:\n            this.state.total + this.state.pickupSavings + this.state.taxes\n        });\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Container className=\"purchase-card\">\n          <Subtotal price={this.state.total.toFixed(2)} />\n          <PickupSavings price={this.state.pickupSavings} />\n          <TaxesFees taxes={this.state.taxes.toFixed(2)} />\n          <hr />\n          <EstimatedTotal price={this.state.estimatedTotal.toFixed(2)} />\n          <ItemDetails price={this.state.estimatedTotal.toFixed(2)} />\n          <hr />\n          <PromoCodeDiscount\n            giveDiscount={() => this.giveDiscountHandler()}\n            isDisabled={this.state.disablePromoButton}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}